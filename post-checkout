#!/bin/bash
source .git/hooks/functions.sh

CLEANUP_SCRIPT=.setup/cleanup.sh

setColors
getWPDir
getMultisite

# Download the core files if necessary
if ! .git/hooks/install.sh; then
    # IF there was a problem, exit with the last exit status
    echo -e "$RED"Could not install WordPress site"$ENDCOLOR"
    exit $?
fi

getSiteNames

echo -e "$YELLOW"Restoring the database"$ENDCOLOR"

if ! wp db import "$SAVEPATH" $WP_CLI_PATH_OPTION; then
	echo -e "$RED""There was an error restoring the database from $SAVEPATH""$ENDCOLOR"
	exit $?
fi

echo "Replacing $OLDURL with $NEWURL"

if [ $IS_MULTISITE ]; then
    echo -e "$YELLOW"Using previous site name in wp-config.php for DB search and replace"$ENDCOLOR"
    sed -i "s/$NEWURL/$OLDURL/" "$WORDPRESS_DIR"/wp-config.php
    NETWORK=--network
fi

if ! wp search-replace "$OLDURL" "$NEWURL" $NETWORK --skip-columns=guid "$WP_CLI_PATH_OPTION"; then
	echo -e "$RED""There was an error searching/replacing the WordPress database""$ENDCOLOR"
	exit $?
fi

if [ $IS_MULTISITE ]; then
    echo -e "$YELLOW"Restoring current site name in wp-config.php"$ENDCOLOR"
    sed -i "s/$OLDURL/$NEWURL/" "$WORDPRESS_DIR"/wp-config.php
fi

if ! .git/hooks/remove.sh; then
    echo -e "$RED""There was an error removing themes/plugins""$ENDCOLOR"
	exit $?
fi

if [ -e "$CLEANUP_SCRIPT" ]; then
    if ! "$CLEANUP_SCRIPT"; then
        echo -e "$RED""There was an error running cleanup.sh""$ENDCOLOR"
        exit $?
    fi
    echo -e "$GREEN"Cleanup Script complete."$ENDCOLOR"
    echo
else
    if [ ! -e "$WORDPRESS_SETUP_DIR"/cleanup.example.sh ]; then
        cp .git/hooks/cleanup.example.sh .
    fi
    
    echo -e "$YELLOW"To use the cleanup script, copy cleanup.example.sh to cleanup.sh in your project folder"$ENDCOLOR"
fi

echo
echo -e "$GREEN""WordPress site installation complete!""$ENDCOLOR"